---
- name: Create password directory
  file:
    path: "{{ passwd_dir }}"
    state: directory
    owner: jenkins
    group: jenkins
    mode: '644'

- name: Add a line to a password file if the file does not exist (secret is --extra-var)
  lineinfile:
    path: "{{ passwd_dir }}/secret"
    line: "{{ secret }}"
    create: yes

- name: Setup new account
  shell: geth account new --password {{ secret_file }} --datadir data | grep Public | awk '{print $6}' | cut -c 3-
  args:
    executable: /bin/bash
  register: account_result

- name: Set fact (signer address)
  set_fact:
    signer_address: "{{ account_result.stdout }}"

- name: Provide genesis file
  template:
    src: genesis.json.j2
    dest: "{{ home }}/genesis.json"

- name: Initializing the Geth database
  shell: geth init --datadir "{{ datadir }}" "{{ home }}/genesis.json"
  args:
    executable: /bin/bash
  register: db_res

- name: Create executable starter of bootstrap node
  shell: |
    echo "#!/bin/bash" > "{{ home }}/{{ exec_script }}"
    echo -e "\n /usr/bin/geth --datadir {{ datadir }} --networkid {{ network_id }} --nat extip:{{ ansible_facts['ansible_default_ipv4']['address'] }}" >> "{{ home }}/{{ exec_script }}"
  args:
    executable: /bin/bash

- name: Change mode and permissions of starter
  file:
    path: "{{ home }}/{{ exec_script }}"
    state: file
    group: "{{ default_ssh_user }}"
    owner: "{{ default_ssh_user }}"
    mode: '755'
    
- name: Create bootstrap node service
  template:
    src: geth-master.service.j2
    dest: /etc/systemd/system/geth-master.service
  become: yes
  notify:
    - reread configs 
    - start geth-master

- meta: flush_handlers

- name: Collect facts about system services
  service_facts:

- name: Find Bootstrap URL
  shell: journalctl -u geth-master.service | grep self=enode | awk '{print $NF}' | cut -c 6- | head -1
  args:
    executable: /bin/bash
  register: url_res
  until: ansible_facts['services']['geth-master.service']['state'] == 'running'
  retries: 5
  delay: 10

- name: Set fact (bootstrap url)
  set_fact:
    bootstrap_url: "{{ url_res.stdout }}"